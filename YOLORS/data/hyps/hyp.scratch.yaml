# 调参
# Hyperparameters for COCO training from scratch
# python train.py --batch 40 --cfg yolov5m.yaml --weights '' --data coco.yaml --img 640 --epochs 300
# See tutorials for hyperparameter evolution https://github.com/ultralytics/yolov5#tutorials

lr0: 0.00096  # initial learning rate (SGD=1E-2, Adam=1E-3)
lrf: 0.00168  # final OneCycleLR learning rate (lr0 * lrf)
momentum: 0.920  # SGD momentum/Adam beta1
weight_decay: 0.0005  # optimizer weight decay 5e-4
warmup_epochs: 0.737  # warmup epochs (fractions ok)
warmup_momentum: 0.95  # warmup initial momentum
warmup_bias_lr: 0.0166  # warmup initial bias lr
box: 0.0894  # box loss gain

cls: 0.251  # cls loss gain
cls_pw: 0.517  # cls BCELoss positive_weight  0.527
obj: 0.976 #0.976  # obj loss gain (scale with pixels)
obj_pw: 0.536  # obj BCELoss positive_weight 536
iou_t: 0.2  # IoU training threshold
anchor_t: 3.5  # anchor-multiple threshold
# anchors: 3  # anchors per output layer (0 to ignore)
fl_gamma: 0.0  # focal loss gamma (efficientDet default gamma=1.5)
hsv_h: 0.15  #15  # image HSV-Hue augmentation (fraction)
hsv_s: 0.7 #9  # image HSV-Saturation augmentation (fraction)
hsv_v: 0.4 #41  # image HSV-Value augmentation (fraction)                  HSV
degrees: 0.0 # image rotation (+/- deg)                                  rotation
translate: 0.0 #14  # image translation (+/- fraction)
scale: 0.0 #917  # image scale (+/- gain)
shear: 0.0 # image shear (+/- deg)
perspective: 0.000 # image perspective (+/- fraction), range 0-0.001
flipud: 0.4 # image flip up-down (probability)
fliplr: 0.0 #5  # image flip left-right (probability)
mosaic: 0.9 #1.0  # image mosaic (probability)                            mosaic
mixup: 0.0 # image mixup (probability)                                      mixup
copy_paste: 0.3 #3  # segment copy-paste (probability)
CropOnline: 0.2 #2
seg: 0.2 
seg_weight1: 1.0
seg_weight2: 1.0
seg_weight3: 1.0